vendor_name = ModelSim
source_file = 1, SAD_v1
source_file = 1, somador_8bits.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/somador1bit.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/somador_13bits.vhd
source_file = 1, subtrator1bit.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/abst.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/sad_bc.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/subtratornbits.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/mux2para1.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/sad_bo.vhd
source_file = 1, C:/Users/lucas/Documents/Sistemas Digitais/GIT/INE5406/sad-v1/SAD-Lucas/SAD_v1/db/SAD_v1.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = sad_bc
instance = comp, \read_mem~output\, read_mem~output, sad_bc, 1
instance = comp, \address[0]~output\, address[0]~output, sad_bc, 1
instance = comp, \address[1]~output\, address[1]~output, sad_bc, 1
instance = comp, \address[2]~output\, address[2]~output, sad_bc, 1
instance = comp, \address[3]~output\, address[3]~output, sad_bc, 1
instance = comp, \address[4]~output\, address[4]~output, sad_bc, 1
instance = comp, \address[5]~output\, address[5]~output, sad_bc, 1
instance = comp, \sad_value[0]~output\, sad_value[0]~output, sad_bc, 1
instance = comp, \sad_value[1]~output\, sad_value[1]~output, sad_bc, 1
instance = comp, \sad_value[2]~output\, sad_value[2]~output, sad_bc, 1
instance = comp, \sad_value[3]~output\, sad_value[3]~output, sad_bc, 1
instance = comp, \sad_value[4]~output\, sad_value[4]~output, sad_bc, 1
instance = comp, \sad_value[5]~output\, sad_value[5]~output, sad_bc, 1
instance = comp, \sad_value[6]~output\, sad_value[6]~output, sad_bc, 1
instance = comp, \sad_value[7]~output\, sad_value[7]~output, sad_bc, 1
instance = comp, \sad_value[8]~output\, sad_value[8]~output, sad_bc, 1
instance = comp, \sad_value[9]~output\, sad_value[9]~output, sad_bc, 1
instance = comp, \sad_value[10]~output\, sad_value[10]~output, sad_bc, 1
instance = comp, \sad_value[11]~output\, sad_value[11]~output, sad_bc, 1
instance = comp, \sad_value[12]~output\, sad_value[12]~output, sad_bc, 1
instance = comp, \sad_value[13]~output\, sad_value[13]~output, sad_bc, 1
instance = comp, \done~output\, done~output, sad_bc, 1
instance = comp, \cpA~output\, cpA~output, sad_bc, 1
instance = comp, \cpB~output\, cpB~output, sad_bc, 1
instance = comp, \ci~output\, ci~output, sad_bc, 1
instance = comp, \zi~output\, zi~output, sad_bc, 1
instance = comp, \zsoma~output\, zsoma~output, sad_bc, 1
instance = comp, \csoma~output\, csoma~output, sad_bc, 1
instance = comp, \csad_reg~output\, csad_reg~output, sad_bc, 1
instance = comp, \clk~input\, clk~input, sad_bc, 1
instance = comp, \clk~inputclkctrl\, clk~inputclkctrl, sad_bc, 1
instance = comp, \enable~input\, enable~input, sad_bc, 1
instance = comp, \menor~input\, menor~input, sad_bc, 1
instance = comp, \PE.S5~0\, PE.S5~0, sad_bc, 1
instance = comp, \reset~input\, reset~input, sad_bc, 1
instance = comp, \REG~0\, REG~0, sad_bc, 1
instance = comp, \REG~0clkctrl\, REG~0clkctrl, sad_bc, 1
instance = comp, \EA.S5\, EA.S5, sad_bc, 1
instance = comp, \Selector6~0\, Selector6~0, sad_bc, 1
instance = comp, \EA.S0~feeder\, EA.S0~feeder, sad_bc, 1
instance = comp, \EA.S0\, EA.S0, sad_bc, 1
instance = comp, \PE.S1~0\, PE.S1~0, sad_bc, 1
instance = comp, \EA.S1~feeder\, EA.S1~feeder, sad_bc, 1
instance = comp, \EA.S1\, EA.S1, sad_bc, 1
instance = comp, \EA.S4\, EA.S4, sad_bc, 1
instance = comp, \PE.S2\, PE.S2, sad_bc, 1
instance = comp, \EA.S2~feeder\, EA.S2~feeder, sad_bc, 1
instance = comp, \EA.S2\, EA.S2, sad_bc, 1
instance = comp, \PE.S3~0\, PE.S3~0, sad_bc, 1
instance = comp, \EA.S3\, EA.S3, sad_bc, 1
instance = comp, \WideOr0~0\, WideOr0~0, sad_bc, 1
instance = comp, \read_mem$latch\, read_mem$latch, sad_bc, 1
instance = comp, \WideOr1~0\, WideOr1~0, sad_bc, 1
instance = comp, \done$latch\, done$latch, sad_bc, 1
instance = comp, \zi$latch\, zi$latch, sad_bc, 1
instance = comp, \sample_ori[0]~input\, sample_ori[0]~input, sad_bc, 1
instance = comp, \sample_ori[1]~input\, sample_ori[1]~input, sad_bc, 1
instance = comp, \sample_ori[2]~input\, sample_ori[2]~input, sad_bc, 1
instance = comp, \sample_ori[3]~input\, sample_ori[3]~input, sad_bc, 1
instance = comp, \sample_ori[4]~input\, sample_ori[4]~input, sad_bc, 1
instance = comp, \sample_ori[5]~input\, sample_ori[5]~input, sad_bc, 1
instance = comp, \sample_ori[6]~input\, sample_ori[6]~input, sad_bc, 1
instance = comp, \sample_ori[7]~input\, sample_ori[7]~input, sad_bc, 1
instance = comp, \sample_can[0]~input\, sample_can[0]~input, sad_bc, 1
instance = comp, \sample_can[1]~input\, sample_can[1]~input, sad_bc, 1
instance = comp, \sample_can[2]~input\, sample_can[2]~input, sad_bc, 1
instance = comp, \sample_can[3]~input\, sample_can[3]~input, sad_bc, 1
instance = comp, \sample_can[4]~input\, sample_can[4]~input, sad_bc, 1
instance = comp, \sample_can[5]~input\, sample_can[5]~input, sad_bc, 1
instance = comp, \sample_can[6]~input\, sample_can[6]~input, sad_bc, 1
instance = comp, \sample_can[7]~input\, sample_can[7]~input, sad_bc, 1
